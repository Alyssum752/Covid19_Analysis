{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Comparing Covid Cases and University Plans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "plans = pd.read_excel (r'Data.1616202775330.xls')\n",
    "plans[['City', 'State']] = plans.Location.str.split(', ',expand=True)\n",
    "plans = plans.filter(items=['Title', 'City', 'State', 'Plan', 'Date Reported'])\n",
    "plans.columns= plans.columns.str.strip().str.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "states = (pd.read_csv(r'us_states.csv'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "colleges = (pd.read_csv(r'colleges.csv')).drop(columns=['cases_2021', 'notes', 'date'])\n",
    "colleges = (colleges.merge(states, on='state')).rename(columns={'state': 'state name', 'abbreviation' : 'state'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>university</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>plan</th>\n",
       "      <th>date reported</th>\n",
       "      <th>county</th>\n",
       "      <th>ipeds_id</th>\n",
       "      <th>cases</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Brigham Young University-Hawaii</td>\n",
       "      <td>Laie</td>\n",
       "      <td>HI</td>\n",
       "      <td>All remote instruction</td>\n",
       "      <td>2020-06-10</td>\n",
       "      <td>Honolulu</td>\n",
       "      <td>230047</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Hampton University</td>\n",
       "      <td>Hampton</td>\n",
       "      <td>VA</td>\n",
       "      <td>All remote instruction</td>\n",
       "      <td>2020-07-01</td>\n",
       "      <td>Hampton</td>\n",
       "      <td>232265</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Pomona College</td>\n",
       "      <td>Claremont</td>\n",
       "      <td>CA</td>\n",
       "      <td>All remote instruction</td>\n",
       "      <td>2020-07-08</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>121345</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Scripps College</td>\n",
       "      <td>Claremont</td>\n",
       "      <td>CA</td>\n",
       "      <td>All remote instruction</td>\n",
       "      <td>2020-07-08</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>123165</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>West Chester University</td>\n",
       "      <td>West Chester</td>\n",
       "      <td>PA</td>\n",
       "      <td>All remote instruction</td>\n",
       "      <td>2020-07-10</td>\n",
       "      <td>Chester</td>\n",
       "      <td>216764</td>\n",
       "      <td>113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>The College of Saint Rose</td>\n",
       "      <td>Albany</td>\n",
       "      <td>NY</td>\n",
       "      <td>Suspended in-person instruction</td>\n",
       "      <td>2020-11-15</td>\n",
       "      <td>Albany</td>\n",
       "      <td>195234</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>Saint Joseph's College of Maine</td>\n",
       "      <td>Standish</td>\n",
       "      <td>ME</td>\n",
       "      <td>Suspended in-person instruction</td>\n",
       "      <td>2020-11-15</td>\n",
       "      <td>Cumberland</td>\n",
       "      <td>161518</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>Vincennes University</td>\n",
       "      <td>Vincennes</td>\n",
       "      <td>IN</td>\n",
       "      <td>Suspended in-person instruction</td>\n",
       "      <td>2020-11-16</td>\n",
       "      <td>Knox</td>\n",
       "      <td>152637</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>Westfield State University</td>\n",
       "      <td>Westfield</td>\n",
       "      <td>MA</td>\n",
       "      <td>Suspended in-person instruction</td>\n",
       "      <td>2020-11-16</td>\n",
       "      <td>Hampden</td>\n",
       "      <td>168263</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>Brown University</td>\n",
       "      <td>Providence</td>\n",
       "      <td>RI</td>\n",
       "      <td>Suspended in-person instruction</td>\n",
       "      <td>2020-11-17</td>\n",
       "      <td>Providence</td>\n",
       "      <td>217156</td>\n",
       "      <td>284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>204 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          university          city state  \\\n",
       "0    Brigham Young University-Hawaii          Laie    HI   \n",
       "1                 Hampton University       Hampton    VA   \n",
       "2                     Pomona College     Claremont    CA   \n",
       "3                    Scripps College     Claremont    CA   \n",
       "4            West Chester University  West Chester    PA   \n",
       "..                               ...           ...   ...   \n",
       "199        The College of Saint Rose        Albany    NY   \n",
       "200  Saint Joseph's College of Maine      Standish    ME   \n",
       "201             Vincennes University     Vincennes    IN   \n",
       "202       Westfield State University     Westfield    MA   \n",
       "203                 Brown University    Providence    RI   \n",
       "\n",
       "                                plan date reported       county ipeds_id  \\\n",
       "0             All remote instruction    2020-06-10     Honolulu   230047   \n",
       "1             All remote instruction    2020-07-01      Hampton   232265   \n",
       "2             All remote instruction    2020-07-08  Los Angeles   121345   \n",
       "3             All remote instruction    2020-07-08  Los Angeles   123165   \n",
       "4             All remote instruction    2020-07-10      Chester   216764   \n",
       "..                               ...           ...          ...      ...   \n",
       "199  Suspended in-person instruction    2020-11-15       Albany   195234   \n",
       "200  Suspended in-person instruction    2020-11-15   Cumberland   161518   \n",
       "201  Suspended in-person instruction    2020-11-16         Knox   152637   \n",
       "202  Suspended in-person instruction    2020-11-16      Hampden   168263   \n",
       "203  Suspended in-person instruction    2020-11-17   Providence   217156   \n",
       "\n",
       "     cases  \n",
       "0        8  \n",
       "1       37  \n",
       "2       18  \n",
       "3        4  \n",
       "4      113  \n",
       "..     ...  \n",
       "199     81  \n",
       "200     35  \n",
       "201     26  \n",
       "202    144  \n",
       "203    284  \n",
       "\n",
       "[204 rows x 8 columns]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "info = pd.merge(plans, colleges, on='state')\n",
    "info = info[info['title'] == info['college']]\n",
    "info = (info.drop(columns=['state name', 'city_y', 'college'])).rename(columns={'title': 'university', 'city_x': 'city',})\n",
    "info = info.sort_values(by=['date reported'])\n",
    "info = ((info.drop_duplicates(subset='university', keep='last')).reset_index()).drop(columns='index')\n",
    "\n",
    "info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x7f9b36661a30>"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "vis = sns.catplot(data=info, x='cases', y='plan', kind='bar', aspect=2)\n",
    "vis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
